<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.candy.basic.mapper.ShopMapper">
  <resultMap id="BaseResultMap" type="com.candy.basic.entity.Shop">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="remaker_score" jdbcType="DECIMAL" property="remakerScore" />
    <result column="price_par_man" jdbcType="INTEGER" property="priceParMan" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="distance" jdbcType="INTEGER" property="distance" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from shop
    where shop_id = #{shopId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.candy.basic.entity.Shop">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into shop (shop_id, create_time, update_time,
      shop_name, remaker_score, price_par_man,
      latitude, longitude, category_id,
      tags, start_time, end_time,
      address, seller_id, icon_url
      )
    values (#{shopId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{shopName,jdbcType=VARCHAR}, #{remakerScore,jdbcType=DECIMAL}, #{priceParMan,jdbcType=INTEGER},
      #{latitude,jdbcType=DECIMAL}, #{longitude,jdbcType=DECIMAL}, #{categoryId,jdbcType=BIGINT},
      #{tags,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR}, #{sellerId,jdbcType=BIGINT}, #{iconUrl,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.candy.basic.entity.Shop">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update shop
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      shop_name = #{shopName,jdbcType=VARCHAR},
      remaker_score = #{remakerScore,jdbcType=DECIMAL},
      price_par_man = #{priceParMan,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=DECIMAL},
      longitude = #{longitude,jdbcType=DECIMAL},
      category_id = #{categoryId,jdbcType=BIGINT},
      tags = #{tags,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=BIGINT},
      icon_url = #{iconUrl,jdbcType=VARCHAR}
    where shop_id = #{shopId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select shop_id, create_time, update_time, shop_name, remaker_score, price_par_man,
    latitude, longitude, category_id, tags, start_time, end_time, address, seller_id,
    icon_url
    from shop
    where shop_id = #{shopId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select shop_id, create_time, update_time, shop_name, remaker_score, price_par_man,
    latitude, longitude, category_id, tags, start_time, end_time, address, seller_id,
    icon_url
    from shop order by shop_id asc
  </select>
  <select id="countShopNum" resultType="java.lang.Integer">
    select count(1) from shop
  </select>


    <select id="recommend" resultMap="BaseResultMap">
   select shop_id, create_time, update_time, shop_name, remaker_score, price_par_man,
      latitude, longitude, category_id, tags, start_time, end_time, address, seller_id,
      icon_url,ceil(1 + 1000*(2 * 6378.137* ASIN(SQRT(POW(SIN(PI() * (#{latitude} - latitude) / 360), 2) + COS(PI() * #{latitude} / 180)
    * COS(latitude* PI() / 180) * POW(SIN(PI() * (#{longitude} - longitude) / 360), 2))))) AS distance
    from shop order by (0.95*1/log10(distance)+ 0.05*remaker_score/5)  DESC
    </select>
    <select id="search"  resultMap="BaseResultMap">
      select shop_id, create_time, update_time, shop_name, remaker_score, price_par_man,
      latitude, longitude, category_id, tags, start_time, end_time, address, seller_id,
      icon_url,ceil(1 + 1000*(2 * 6378.137* ASIN(SQRT(POW(SIN(PI() * (#{latitude} - latitude) / 360), 2) + COS(PI() * #{latitude} / 180)
    * COS(latitude* PI() / 180) * POW(SIN(PI() * (#{longitude} - longitude) / 360), 2))))) AS distance
    from shop where shop_name like CONCAT('%',#{keyword},'%')
      <if test="categoryId != null">
        and category_id = #{categoryId}
      </if>
      <if test="tags != null">
        and tags = #{tags}
      </if>

      <if test="orderby == null">
        order by (0.95*1/log10(distance)+ 0.05*remaker_score/5)  DESC
      </if>
      <if test="orderby == 1">
        order by price_par_man ASC,shop_id ASC
      </if>
    </select>

    <select id="searchGroupByTags" resultType="java.util.Map">
      select tags,count(1) as num from shop where shop_name like CONCAT('%',#{keyword},'%')
      <if test="categoryId != null">
        and category_id = #{categoryId}
      </if>
      <if test="tags != null">
        and tags = #{tags}
      </if>
      group by tags
    </select>

</mapper>
